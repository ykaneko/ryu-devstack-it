Jenkins / Tomcat / Ubuntu 12.04 Server amd64

* インストール & セットアップ

- パッケージのインストール

  $ sudo apt-get install jenkins-tomcat git kvm libvirt-bin bridge-utils \
  ubuntu-vm-builder mysql-client-core-5.5 vim lv

  jenkins-tomcatパッケージをインストールすると、JenkinsとTomcat(およびそれらの
  依存パッケージ)がインストール、セットアップします。

  gitパッケージは、devstackを更新するためにgitコマンドを使用するため必要です。
  kvm、bridge-utilsは、テスト環境構築のために使用します。
  mysql-client-core-5.5は、テストスクリプトが使用します。

- sudo

  Jenkinsはユーザtomcat6で実行されます。Jenkinsから起動されるテストスクリプトも
  同ユーザで実行されるので、tomcat6が、sudoをパスワードなしで実行できるように
  設定します。

    $ sudo visudo
    tomcat6   ALL=(ALL:ALL) NOPASSWD:ALL

- SSH/git

  tocmat6でssh、gitコマンドを実行できるようにします。

    $ cd /usr/share/tomcat6
    $ sudo mkdir .ssh
    $ sudo vi .gitconfig
    [user]
            name = Ryu Network Operating System
            email = ryu@ryu-test1.osrg.net
    $ sudo chown tomcat6.tomcat6 .ssh .gitconfig


- テスト環境の構築

  /home/ryu/jenkinsにテスト環境を構築します。

    $ git clone https://github.com/ykaneko/ryu-devstack-it jenkins
    $ wget -O jenkins/files/ryudev.qcow2 http://sourceforge.net/projects/ryu/files/vmimages/Ryu-DevStack-IT/ryudev.qcow2/download
    $ sudo chown -R tomcat6.tomcat6 jenkins
    $ sudo chmod 600 files/id_rsa

  jenkins
  |-- devstack.tar.gz     ... devstack/のアーカイブ
  |-- files
  |   |-- cirros-0.3.0-x86_64-uec_custom.tar.gz  ... metadataアクセスを抑制
                                                     したinstanceイメージ
  |   |-- id_rsa          ... instance用sshキー
  |   |-- id_rsa.pub      ...   〃
  |   `-- ryudev.qcow2    ... テストVMイメージ(devstackを起動するVM)
  |-- ifdown              ... テストVM用ネットワーク設定スクリプト
  |-- ifdown2             ...   〃
  |-- ifup                ...   〃
  |-- ifup2               ...   〃
  |-- run.sh              ... テストスクリプト
  `-- update-devstack.sh  ... devstack更新スクリプト

  テストスクリプトを実行すると以下のファイルが追加されます。

  |-- devstack
  |   |-- folsom
  |   |   `-- devstack    ... folsom用(stable/folsom)devstack
  |   |-- grizzly-gre
  |   |   `-- devstack    ... grizzly用(stable/grizzly)devstack
  |   |-- grizzly-vlan
  |   |   `-- devstack    ... grizzly用(stable/grizzly)devstack
  |   |-- master-gre
  |   |   `-- devstack    ... master用devstack
  |   `-- master-vlan
  |       `-- devstack    ... master用devstack
  |-- logs
  |   |-- devstack.folsom
  |   |   |-- ryudev1                         ... ryudev1のログ
  |   |   |   |-- devstack                    ... devstackのログ
  |   |   |   |-- devstack.2012-12-18-042841
  |   |   |   |-- devstack.summary            ... devstackのサマリ
  |   |   |   |-- devstack.2012-12-18-042841.2012-12-18-042841.summary
  |   |   |   `-- stack                       ... SCREENのログ
  |   |   |       |-- screen-c-api.2012-12-18-042841.log
  |   |   |       |-- screen-c-api.log
                    <略>
  |   |   |       |-- screen-ryu.2012-12-20-111639.log
  |   |   |       `-- screen-ryu.log
  |   |   |-- ryudev2
  |   |   `-- ryudev3
  |   |-- devstack.grizzly-gre                ... devstack.folsomと同様
            <略>
  |   |-- devstack.master-gre                 ... devstack.folsomと同様
            <略>
  |   |-- log.folsom.20121217174718           ... テストスクリプトのログ
  |   |-- log.grizzly-gre.20121217180154
  |   |-- log.master-gre.20130603171036
  |   |-- summary.folsom.20121217174718       ... テストスクリプトのサマリ
  |   |-- summary.grizzly-gre.20121220203026      (標準出力の内容)
  |   `-- summary.master-gre.20130603171036
  |-- ryu1.qcow2                              ... ryudev1のディスクイメージ
  |-- ryu2.qcow2                              ... ryudev2のディスクイメージ
  |-- ryu3.qcow2                              ... ryudev3のディスクイメージ
  `-- tmp
      |-- dnsmasq.log                         ... ホスト上のdnsmasqのログ
      |-- dnsmasq.lease                       ... dnsmasqのleaseファイル
      |-- dnsmasq.pid                         ... dnsmasqのpid
      |-- fixedip-vm1                         ... テストスクリプトで起動した
                                                  instanceのFixed-IP
      |-- fixedip-vm2
      |-- fixedip-vm3
      |-- fixedip-vm4
      |-- floatingip-vm1                      ... テストスクリプトで起動した
                                                  instanceのFloating-IP
      |-- floatingip-vm2
      |-- floatingip-vm3
      |-- floatingip-vm4
      |-- key1                                ... KeyPair
      |-- key2
      |-- key3
      |-- kvm_ryudev1.pid                     ... ryudev1のKVMのpid
      |-- kvm_ryudev2.pid
      `-- kvm_ryudev3.pid


* Jenkinsの設定

Jenkinsの設定はWeb画面で行います。
ブラウザで次のURLにアクセスします。[img/01.png]

  http://HOST:8080/jenkins/

- 基本設定

  本テストは、1つのテスト環境を複数のテストで使用するため、同時に実行される
  テストは1つのみに制限します。他のテストが実行中であった場合は、そのテストが
  完了するまで待たされます。

    Jenkinsの管理 ≫ システムの設定 [img/02.png][img/03.png]

      同時ビルド数: 1

      Email通知
        SMTPサーバー: fs.osrg.net
        管理者のメールアドレス: <通知メールのFromアドレス>

    画面下の"保存"をクリックして保存します。

- URLTrigger Pluginの追加

  githubのcommitのRSSが更新されたときにテストを実行する用にするため、URLTrigger
  Pluginを使用します。

    Jenkinsの管理 ≫ プラグインの管理 ≫ 利用可能  [img/02.png][img/04.png]

      URLTrigger Plugin にチェックを付ける

    画面下の"インストール"をクリックしてインストールします。

    インストール画面 [img/05.png] の
      インストール完了後、ジョブがなければJenkinsを再起動する
    にチェックを付け、インストール後にJenkinsを再起動するようにします。


- ジョブの設定

  新規ジョブ作成 [img/06.png]
    ジョブ名: master-gre
    フリースタイル・プロジェクトのビルド

    [img/07.png]

    高度な設定...
      カスタムワークスペースの使用
      ディレクトリ: /home/ryu/jenkins/
  
    ソースコード管理システム
      なし
  
    ビルド・トリガ
      [URLTrigger] - Poll with a URL
        URL: https://github.com/osrg/ryu/commits/master.atom
        URL Response Check
          Check the last modification Date
          Inspect URL content
  
        URL: https://github.com/openstack/quantum/commits/master.atom
        URL Response Check
          Check the last modification Date
          Inspect URL content
  
        URL: https://github.com/openstack/nova/commits/master.atom
        URL Response Check
          Check the last modification Date
          Inspect URL content
  
      Schedule:
        */30 * * * *
  
    ビルド
      シェルの実行
      シェルスクリプト:
        #!/bin/bash
        set -e
        ./update-devstack.sh master-gre
        ./run.sh master-gre

       ※ run.shは環境変数EXTIF(デフォルトeth0)を参照します。
         インターネットへの経路に使用するインターフェースの名前が
         eth0以外のときは明示的に指定してください。
            例. EXTIF=em1 ./run.sh master-gre
  
    ビルド後の処理  (必要に応じて設定します)
      Email通知
        宛先: <宛先メールアドレス>
        不安定ビルドも逐一メールを送信

    画面下の"保存"をクリックしてジョブを登録します。
    ジョブを作ったら、手動で実行(ビルド実行)します。 [img/08.png][img/09.png]

  master-vlanおよびgrizzly-gre、grizzly-vlanも同様にして作ります。
  ビルド・トリガのURLとビルドのシェルスクリプトが若干違うだけです。

  - master-vlan

    ビルド
      シェルスクリプト:
        #!/bin/bash
        set -e
        ./update-devstack.sh master-vlan
        ./run.sh master-vlan

  - grizzly-gre

    ビルド・トリガ
      [URLTrigger] - Poll with a URL
        URL: https://github.com/osrg/ryu/commits/master.atom
        URL: https://github.com/openstack/quantum/commits/stable/grizzly.atom
        URL: https://github.com/openstack/nova/commits/stable/grizzly.atom

    ビルド
      シェルスクリプト:
        #!/bin/bash
        set -e
        ./update-devstack.sh grizzly-gre
        ./run.sh grizzly-gre

  - grizzly-vlan

    ビルド・トリガ
      [URLTrigger] - Poll with a URL
        URL: https://github.com/osrg/ryu/commits/master.atom
        URL: https://github.com/openstack/quantum/commits/stable/grizzly.atom
        URL: https://github.com/openstack/nova/commits/stable/grizzly.atom

    ビルド
      シェルスクリプト:
        #!/bin/bash
        set -e
        ./update-devstack.sh grizzly-vlan
        ./run.sh grizzly-vlan

